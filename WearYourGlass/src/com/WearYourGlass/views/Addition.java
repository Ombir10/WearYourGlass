/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JF  rame.java to edit this template
 */
package com.WearYourGlass.views;

import com.WearYourGlass.models.*;
import com.WearYourGlass.views.*;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author raiom
 */
public class Addition extends javax.swing.JFrame {

    
    
    private final WearYourGlass newData;
    
    /**
     * Creates new form Addition
     */
    
    public Addition(WearYourGlass data) {
        initComponents();
        this.newData = data;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblBrands = new javax.swing.JLabel();
        lblMaterials = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblPower = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtBrands = new javax.swing.JTextField();
        txtMaterials = new javax.swing.JTextField();
        txtSize = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtPower = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 592, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBrands.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBrands.setText("Brand");

        lblMaterials.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblMaterials.setText("Material");

        lblSize.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblSize.setText("Frame Size");

        lblPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPrice.setText("Price ");

        lblPower.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPower.setText("Supported Power");

        lblColor.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblColor.setText("Gender");

        lblGender.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblGender.setText("Frame Color");

        txtBrands.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrandsActionPerformed(evt);
            }
        });

        txtMaterials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaterialsActionPerformed(evt);
            }
        });

        txtSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSizeActionPerformed(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        txtPower.setEditable(false);
        txtPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPowerActionPerformed(evt);
            }
        });

        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Please insert data for all the textfield ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Start Power");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("End Power");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaterials, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblGender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaterials)
                                    .addComponent(txtSize)
                                    .addComponent(txtPrice)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(44, 44, 44))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblPower)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPower, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBrands, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaterials, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaterials, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPower, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPower, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnOK)
                .addGap(111, 111, 111))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 645, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**public void actionPerformed(ActionEvent e){
        try{
        String Brands = txtBrands.getText();}
        catch(){
            
        }
        
    }**/
    
    public String isBrandExists(){
        WearYourGlass glassData = new WearYourGlass();
        glassData.getAllDataFromTable();
        String brand_name = txtBrands.getText().trim();
            for(WearYourGlassModel glassModel: glassData.getGlassDataList()){
                String brandName = glassModel.getBrands();
                if(brand_name.equalsIgnoreCase(brandName)){
                    JOptionPane.showMessageDialog(this, "Brand already exists. Enter a unique brand.", "Duplicate Brand", JOptionPane.ERROR_MESSAGE);
                    break;
                }else if(brand_name.isEmpty()){
                    // Brands field is empty, show an error message or handle accordingly
                    JOptionPane.showMessageDialog(this, "Please fill the name of Brand .", "Error", JOptionPane.ERROR_MESSAGE);
                    break;
                }else if (!brand_name.matches("^[a-zA-Z]+(\\s[a-zA-Z]+)*$")) {
                // Brands field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Error found on brand name.", "Error", JOptionPane.ERROR_MESSAGE);
                break;
            }
        }
            return brand_name;
    }
    public void rangeOfPower(){
        int start_power;
        int end_power;
        String supported_power;
        
        start_power = (int) jSpinner3.getValue();
        end_power = (int) jSpinner2.getValue();
        if(end_power == 0){
            JOptionPane.showMessageDialog(this, "End power should not be 0.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
        supported_power = start_power +" "+"to"+" "+end_power;
        txtPower.setText(supported_power);
        }
    } 
    

    private void Addition(){
        String materials = txtMaterials.getText().trim();
        String frame_size = txtSize.getText().trim();
        String priceInRs = txtPrice.getText().trim();
        String frame_color = txtColor.getText().trim();
        String supported_power = txtPower.getText().trim();
        String gender = txtGender.getText().trim();
        
        
    
        // Check for special characters in Brands field
            
        
        if (materials.isEmpty()) {
            // materials field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field of materials.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!materials.matches("^[a-zA-Z]+(\\s[a-zA-Z]+)*$")) {
                // materials field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the correct materials of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (frame_size.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field for Frame Size.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!frame_size.matches("^[a-zA-Z]+(\\s[a-zA-Z]+)*$")) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the correct size of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        if (frame_color.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field for Frame color.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!frame_color.matches("^^[a-zA-Z]+([ ,]+[a-zA-Z]+)*$")) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the available color of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        if (gender.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field for Frame color.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!gender.matches("^[a-zA-Z]+$")) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the available color of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        if (priceInRs.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the price of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!priceInRs.matches("^[1-9][0-9]*$") || Integer.parseInt(priceInRs)<700) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "The price of the glass is not accurate.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            rangeOfPower();
            JOptionPane.showMessageDialog(this, "Data added successfully");
            WearYourGlassModel newGlassModel = new WearYourGlassModel(isBrandExists(), materials, frame_size, Integer.parseInt(priceInRs), supported_power, frame_color, gender);
            newData.getGlassDataList().add(newGlassModel);
            //wearYourGlass.addToGlassDataList(newGlassModel);
            newData.updateTable();
    }
    

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        Addition();
        
            
            //Object [] rowData = {isBrandExists(), materials, frame_size, priceInRs,  supported_power,frame_color, gender };
            //System.out.println("Adding Row: " + Arrays.toString(rowData));
        
         
        
        
        //tablemodel.addRow(rowData);
    }//GEN-LAST:event_btnOKActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
        String gender =txtGender.getText().trim();
        if (gender.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field for Frame color.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!gender.matches("^[a-zA-Z]+$")) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the available color of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
    }//GEN-LAST:event_txtGenderActionPerformed

    private void txtPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPowerActionPerformed
        // TODO add your handling code here:
        
        int start_power;
        int end_power;
        String supported_power;
        
        start_power = (int) jSpinner3.getValue();
        end_power = (int) jSpinner2.getValue();
        if(start_power == 0 && end_power ==0){
            JOptionPane.showMessageDialog(this, "Please provide the appropriate data.", "Error", JOptionPane.ERROR_MESSAGE);
        }else if(end_power == 0){
            JOptionPane.showMessageDialog(this, "End power should not be 0.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
        supported_power = start_power +"to"+end_power;
        txtPower.setText(supported_power);
        }
        
    }//GEN-LAST:event_txtPowerActionPerformed

    private void txtMaterialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaterialsActionPerformed
        // TODO add your handling code here:
        String materials =txtMaterials.getText().trim();
        if (materials.isEmpty()) {
            // materials field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field of materials.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!materials.matches("^[a-zA-Z]+(\\s[a-zA-Z]+)*$")) {
                // materials field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the correct materials of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
    }//GEN-LAST:event_txtMaterialsActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
        String priceInRs =txtPrice.getText().trim();
        if (priceInRs.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the price of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!priceInRs.matches("^[1-9][0-9]*$") || Integer.parseInt(priceInRs)<700) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "The price of the glass is not accurate.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
        String frame_color =txtColor.getText().trim();
        if (frame_color.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field for Frame color.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!frame_color.matches("^^[a-zA-Z]+([ ,]+[a-zA-Z]+)*$")) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the available color of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
    }//GEN-LAST:event_txtColorActionPerformed

    private void txtSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSizeActionPerformed
        // TODO add your handling code here:
        String frame_size =txtSize.getText().trim();
        if (frame_size.isEmpty()) {
            // frame_size field is empty, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please fill the field for Frame Size.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        // Check for special characters in materials field
            if (!frame_size.matches("^[a-zA-Z]+(\\s[a-zA-Z]+)*$")) {
                // frame_size field contains special characters, show an error message or handle accordingly
                JOptionPane.showMessageDialog(this, "Please provide the correct size of the glass.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
    }//GEN-LAST:event_txtSizeActionPerformed

    private void txtBrandsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrandsActionPerformed
        // TODO add your handling code here:
        isBrandExists();
    }//GEN-LAST:event_txtBrandsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Addition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Addition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Addition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Addition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Addition(new WearYourGlass()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JLabel lblBrands;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblMaterials;
    private javax.swing.JLabel lblPower;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSize;
    private javax.swing.JTextField txtBrands;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtMaterials;
    private javax.swing.JTextField txtPower;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables
}
