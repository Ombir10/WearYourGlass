/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.WearYourGlass.views;

import com.WearYourGlass.controllers.*;

import javax.swing.table.DefaultTableModel;
import com.WearYourGlass.models.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
/**
 *
 * @author raiom
 */
public class WearYourGlass extends javax.swing.JFrame {

    /**
     * Creates new form WearYourGlass
     */
    
   private final DefaultTableModel tableModel;
   private ArrayList<WearYourGlassModel> glassDataList;
    // Your MergeSort instance

    public ArrayList<WearYourGlassModel> getGlassDataList() {
        return glassDataList;
    }
   
    
    private Addition additionFrame;
    private UpdateTableData updateFrame;
    
    public WearYourGlass() {
        
        initComponents();
        // Initialize your table model
         glassDataList = new ArrayList<>();
        tableModel = (DefaultTableModel) sortTable.getModel();
        getAllDataFromTable();
        
        // Initialize MergeSort instance
    }
    
    public DefaultTableModel getTableModel(){
        return tableModel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        cbSearchBy = new javax.swing.JComboBox<>();
        valueField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        lblQuote = new javax.swing.JLabel();
        sbWearYourGlass = new javax.swing.JScrollPane();
        sortTable = new javax.swing.JTable();
        lblImg = new javax.swing.JLabel();
        lblImg2 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAscend = new javax.swing.JButton();
        descendingBtn = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(153, 153, 153)));

        lblTitle.setBackground(new java.awt.Color(153, 153, 153));
        lblTitle.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("WEARYOURGLASS");

        cbSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brands", "Materials", "Frame Size", "Price in Rs", "Supported Power", "Frame Color", "Gender" }));
        cbSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchByActionPerformed(evt);
            }
        });

        valueField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueFieldActionPerformed(evt);
            }
        });

        searchBtn.setText("search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        lblQuote.setBackground(new java.awt.Color(204, 204, 204));
        lblQuote.setFont(new java.awt.Font("Segoe Script", 2, 14)); // NOI18N
        lblQuote.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQuote.setText("'' COMFORT & STYLE''");

        sortTable.setAutoCreateRowSorter(true);
        sortTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sortTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"John Jacobs", "Stainless Steel", "Extra Narrow", "3500", "+0.25 to +1", "Black, Blue, Red", "Unisex"},
                {"Vincent Chase", "Italian Acetate", "Narrow", "2000", "+1 to +1.50", "Blue, Dual Tone", "Women"},
                {"Lnskart Air", "PolyCarbonate", "Medium", "1700", "+1.50 to +2.50", "Grey, Black, Silver", "Men"},
                {"Hooper", "Titanium", "Medium", "3500", "+0.25 to +2.50", "Purple, Brown", "Unisex"},
                {"Aqua Color", "Aluminium", "Extra Wide", "3000", "3 to -3", "Red, Brown", "Men"},
                {"New Balance", "Stainless Steel", "Narrow", "1700", "+1 to +2.50", "Yellow, Blue", "Women"}
            },
            new String [] {
                "Brands", "Materials", "Frame Size", "Price in Rs", "Supported Power", "Frame Color", "Gender"
            }
        ));
        sortTable.setRowHeight(25);
        sortTable.setRowMargin(8);
        sortTable.setShowVerticalLines(true);
        sbWearYourGlass.setViewportView(sortTable);
        if (sortTable.getColumnModel().getColumnCount() > 0) {
            sortTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        lblImg.setBackground(new java.awt.Color(204, 204, 204));
        lblImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WearYourGlass/views/ggg-removebg-preview.png"))); // NOI18N

        lblImg2.setBackground(new java.awt.Color(204, 204, 204));
        lblImg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WearYourGlass/views/ggg-removebg.png"))); // NOI18N

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAscend.setText("Ascend");
        btnAscend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAscendActionPerformed(evt);
            }
        });

        descendingBtn.setText("Descend");
        descendingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descendingBtnActionPerformed(evt);
            }
        });

        btnRefresh.setText("Back");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(lblQuote, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(271, 271, 271))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(lblImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(descendingBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAscend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(345, 345, 345))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(sbWearYourGlass, javax.swing.GroupLayout.PREFERRED_SIZE, 1408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addComponent(lblImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(lblQuote, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAscend, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(descendingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(sbWearYourGlass, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void updateTable()
    {
        tableModel.setRowCount(0);
        for (WearYourGlassModel data: glassDataList)
        {
            Object[] glassdata = {data.getBrands(),data.getMaterials(), data.getFrameSize(), data.getPrice(), data.getSupportedPower(), 
                data.getFrameColor(), data.getGender()};
            tableModel.addRow(glassdata);
            System.out.println(Arrays.toString(glassdata));   
        }
    }
    

    
    public void getAllDataFromTable(){
        int rows = sortTable.getRowCount();
        for (int i=0;i<rows; i++)
        {
            String Brands = sortTable.getValueAt(i, 0).toString();
//            System.out.println(Brands.substring(1, Brands.length()-1));
            String Materials = sortTable.getValueAt(i, 1).toString();
            String FrameSize = sortTable.getValueAt(i, 2).toString();
            int Price = Integer.parseInt(sortTable.getValueAt(i, 3).toString());
            String SupportedPower = sortTable.getValueAt(i, 4).toString();
            String Gender = sortTable.getValueAt(i, 6).toString();
            String FrameColor = sortTable.getValueAt(i, 5).toString();
            WearYourGlassModel glassData = new WearYourGlassModel(Brands, Materials, FrameSize, Price, SupportedPower, FrameColor, Gender);
            glassDataList.add(glassData);   
        } 
    }
            
    
    private void cbSearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchByActionPerformed
        
        
    }//GEN-LAST:event_cbSearchByActionPerformed

    private void valueFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueFieldActionPerformed

    public void addToGlassDataList(WearYourGlassModel newGlassModel){
        glassDataList.add(newGlassModel);
        
    }
 
    public void addData(Object [] data){
        System.out.println("fdsaf");
        tableModel.insertRow(tableModel.getRowCount(),data);
    }
    
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        additionFrame = new Addition(this);
        additionFrame.setVisible(true);
        additionFrame.pack();
        additionFrame.setLocationRelativeTo(null);
        additionFrame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
       // additionFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnAddActionPerformed
    
    public void setUpdatedData(String brands, String materials, String size, String price, String power, String color, String gender) {
        if (sortTable.getSelectedRow()!= -1) {
            sortTable.setValueAt(brands, sortTable.getSelectedRow(), 0);
            sortTable.setValueAt(materials, sortTable.getSelectedRow(), 1);
            sortTable.setValueAt(size, sortTable.getSelectedRow(), 2);
            sortTable.setValueAt(price, sortTable.getSelectedRow(), 3);
            sortTable.setValueAt(power, sortTable.getSelectedRow(), 4);
            sortTable.setValueAt(color, sortTable.getSelectedRow(), 5);
            sortTable.setValueAt(gender, sortTable.getSelectedRow(), 6);
        }
    }  
    
    public JTable getSortedTable(){
        return  sortTable;
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        // Get the selected row index
        int selectedRow = sortTable.getSelectedRow();
        if (selectedRow != -1){
            String brands = sortTable.getValueAt(selectedRow, 0).toString();
            String materials = sortTable.getValueAt(selectedRow, 1).toString();
            String size = sortTable.getValueAt(selectedRow, 2).toString();
            String price = sortTable.getValueAt(selectedRow, 3).toString();
            String power = sortTable.getValueAt(selectedRow, 4).toString();
            String color = sortTable.getValueAt(selectedRow, 5).toString();
            String gender = sortTable.getValueAt(selectedRow, 6).toString();
            
            UpdateTableData updateTableData = new UpdateTableData(new WearYourGlass());
            updateTableData.setValues(brands, materials, size, price, power, color, gender);
            updateTableData.setVisible(true);
        }else{
             JOptionPane.showMessageDialog(this, "Please provide the row");  
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
            // TODO add your handling code here
        int selectedRowCount = sortTable.getSelectedRowCount();
        if (selectedRowCount == 1) {
            int confirmDelete = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this row?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

            if (confirmDelete == JOptionPane.YES_OPTION) {
                tableModel.removeRow(sortTable.getSelectedRow());
                JOptionPane.showMessageDialog(this, "Row deleted successfully.");
            } else {
                // User chose not to delete, do nothing or provide feedback
                JOptionPane.showMessageDialog(this, "Deletion canceled.");
            }
        } else if (selectedRowCount == 0) {
            JOptionPane.showMessageDialog(this, "Please select a single row for deletion.");
        } else {
            // Multiple rows are selected
            JOptionPane.showMessageDialog(this, "Please select a single row for deletion.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    private void updateTableWithSearchResult(List<WearYourGlassModel> foundModels){
        tableModel.setRowCount(0);
        for (WearYourGlassModel foundModel: foundModels){
                    Object [] rowData = {
                    foundModel.getBrands(),
                    foundModel.getMaterials(),
                    foundModel.getFrameSize(),
                    foundModel.getPrice(),
                    foundModel.getSupportedPower(),
                    foundModel.getFrameColor(),
                    foundModel.getGender()
                };
                tableModel.addRow(rowData);
        }
    }
    
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
       // 
        String searchValue = valueField.getText().trim();
        
        BinarySearch bs = new BinarySearch();
        MergeSort mergeSort = new MergeSort();
        
       
        System.out.println("Hellp");
        if(cbSearchBy.getSelectedIndex() == 0){
            mergeSort.sortString(glassDataList, "brands");
            List<WearYourGlassModel> found = bs.searchString(glassDataList, 0, glassDataList.size()-1, searchValue, "brands");
            if(found != null){
                /**JOptionPane.showMessageDialog(null, found.getBrands()+found.getMaterials()+found.getFrameSize()+found.getSupportedPower()+
                        found.getPrice()+found.getFrameColor()+found.getGender(),"found",JOptionPane.INFORMATION_MESSAGE);**/
                updateTableWithSearchResult(found);
            }else{
                JOptionPane.showMessageDialog(null, "notFound");
            }
        }else if(cbSearchBy.getSelectedIndex() == 1){
            mergeSort.sortString(glassDataList, "materials");
            List<WearYourGlassModel> foundMaterials = bs.searchString(glassDataList, 0, glassDataList.size()-1, searchValue,"materials");
            if(foundMaterials != null){
                updateTableWithSearchResult(foundMaterials);
            }
            else{
                JOptionPane.showMessageDialog(null, "notFound");
            }
        }else if(cbSearchBy.getSelectedIndex() == 2){
            mergeSort.sortString(glassDataList, "frame size");
            List<WearYourGlassModel> foundMaterials = bs.searchString(glassDataList, 0, glassDataList.size()-1, searchValue,"frame size");
            if(foundMaterials != null){
                updateTableWithSearchResult(foundMaterials);
            }
            else{
                JOptionPane.showMessageDialog(null, "notFound");
            } 
        }else if(cbSearchBy.getSelectedIndex() == 3){
            mergeSort.sortInt(glassDataList, "price");
            try{
                int searchPrice = Integer.parseInt(searchValue);
                List<WearYourGlassModel> foundPrices = bs.searchInt(glassDataList, 0, glassDataList.size()-1, searchPrice,"price");
                 
                if (!foundPrices.isEmpty()){
                    updateTableWithSearchResult(foundPrices);
            } else {
                JOptionPane.showMessageDialog(null, "notFound");
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter a valid number");
            }  
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void btnAscendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAscendActionPerformed
        // TODO add your handling code here
        MergeSort mergesort = new MergeSort();
        
            if(cbSearchBy.getSelectedIndex() == 0){
                 mergesort.sortString(glassDataList, "brands");
                 updateTable();
            } else if(cbSearchBy.getSelectedIndex() == 1){
                 mergesort.sortString(glassDataList, "materials"); 
                 updateTable();
             } else if(cbSearchBy.getSelectedIndex() == 2){
                 mergesort.sortString(glassDataList, "frame size");
                 updateTable();
                 System.out.println("Sorted Frame Size:");
        for (WearYourGlassModel glassModel : glassDataList) {
            System.out.println(glassModel.getFrameSize());
        }
             }else if(cbSearchBy.getSelectedIndex() == 3){
                 mergesort.sortInt(glassDataList, "price in rs");
                 updateTable();
             }else if(cbSearchBy.getSelectedIndex() == 4){

             }else if(cbSearchBy.getSelectedIndex() == 5){
                 mergesort.sortString(glassDataList, "frame color");
                 updateTable();

             }else if(cbSearchBy.getSelectedIndex() == 6){
                 mergesort.sortString(glassDataList, "Gender");
                 updateTable();
             }
    }//GEN-LAST:event_btnAscendActionPerformed

    private void descendingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descendingBtnActionPerformed
        // TODO add your handling code here:
        MergeSort mergesort = new MergeSort();
        if(cbSearchBy.getSelectedIndex() == 0){
                 mergesort.sortDescendString(glassDataList, "brands");
                 updateTable();
        }else if(cbSearchBy.getSelectedIndex() == 1){
                 mergesort.sortDescendString(glassDataList, "materials"); 
                 updateTable();
             } else if(cbSearchBy.getSelectedIndex() == 2){
                 mergesort.sortDescendString(glassDataList, "frame size");
                 updateTable();
                 System.out.println("Sorted Frame Size:");
             }else if(cbSearchBy.getSelectedIndex() == 3){
                 mergesort.sortInt(glassDataList, "price in rs");
                 updateTable();
             }else if(cbSearchBy.getSelectedIndex() == 4){

             }else if(cbSearchBy.getSelectedIndex() == 5){
                 mergesort.sortDescendString(glassDataList, "frame color");
                 updateTable();

             }else if(cbSearchBy.getSelectedIndex() == 6){
                 mergesort.sortDescendString(glassDataList, "Gender");
                 updateTable();
             }
    }//GEN-LAST:event_descendingBtnActionPerformed

    private void refreshTable(){
        DefaultTableModel atable = (DefaultTableModel) sortTable.getModel();
        for(int i =atable.getRowCount()-1; i>=0; i--){
            atable.removeRow(i);
        }
        
        for(int i =0; i < glassDataList.size(); i++){
            String brands = glassDataList.get(i).getBrands();
            String materials = glassDataList.get(i).getMaterials();
            String size = glassDataList.get(i).getFrameSize();
            int price = glassDataList.get(i).getPrice();
            String power = glassDataList.get(i).getSupportedPower();
            String color = glassDataList.get(i).getFrameColor();
            String gender = glassDataList.get(i).getGender();
            atable.addRow(new Object [] {brands, materials, size, price, power, color, gender});
        }
    }
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WearYourGlass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WearYourGlass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WearYourGlass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WearYourGlass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WearYourGlass().setVisible(true);
            }           
        });
    }

    // 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAscend;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbSearchBy;
    private javax.swing.JButton descendingBtn;
    private javax.swing.JLabel lblImg;
    private javax.swing.JLabel lblImg2;
    private javax.swing.JLabel lblQuote;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JScrollPane sbWearYourGlass;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTable sortTable;
    private javax.swing.JTextField valueField;
    // End of variables declaration//GEN-END:variables

}
